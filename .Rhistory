source("https://raw.githubusercontent.com/HashemiScience/2xe3stuff/main/SkillsPractice.R")
head(data1)
head(data2)
# means, standard deviations, and variances
data1mean <- mean(data1)
data2mean <- mean(data2)
data1sd <- sd(data1)
data2sd <- sd(data2)
data1var <- var(data1)
data2var <- var(data2)
median(data1)
hist(data1)
abline(v=median(data1))
abline(v=mean(data1), col="red", lwd=3)
ggplot() +
geom_histogram(data=myDataFrame, aes(x=data1))
ggplot2
myDataFrame =data.frame(data1, data2)
library(ggplot2)
ggplot() +
geom_histogram(data=myDataFrame, aes(x=data1))
plot(data1, data2)
abline(lm(data2 - data1))
abline(lm(data2 - data1))
abline(lm(data2 ~ data1))
cor(data1, data2)
cor.test(data1, data2)
cor(data1,data2, method="spearman")
#not necesssary
myDataFrame =data.frame(data1, data2)
library(ggplot2)
library(ggplot2)
#not necesssary
myDataFrame = data.frame(data1, data2)
library(ggplot2)
library("ggplot2")
install.packages(ggplot2)
library("ggplot2")
# R2
cor(data1, data2)^2
# normality
qqnorm(data1)
qqline(data1)
qqnorm(data2)
qqline(data2)
qqplot(data1, data2)
qqline(data2, data1)
install.pack(ggplot)
install.packages(ggplot)
install.packages("ggplot)
install.packages("ggplot2")
install.packages(ggplot2)
library("ggplot2")
install.packages("ggplot2")
qqplot(data1, data2)
datan <- length(data1)
data1_sem <- data1_sd/sqrt(length(data1))
datan <- length(data1)
data1_sem <- data1sd/sqrt(length(data1))
(data1_sem <- data1sd/sqrt(length(data1)))
(data2_sem <- data2sd/sqrt(length(data2)))
library("ggplot2")
ggplot() +
geom_histogram(data=myDataFrame, aes(x=data1))
# mean +/- Z*SEM
# z95% = 1.96
qnorm(0.025)
# 90%
qnorm(0.05)
# 80%
qnorm(0.01)
# 95% CI of data1
(lowerCI <- data1mean - 1.96* data1_sem)
(upperCI <- data1mean + 1.96* data1_sem)
# make barplot
makeMyBarplot(27, 10)
makeMyBarplot(27, 30)
makeMyBarplot(27, 100)
makeMyBarplot(27, 500)
# make barplot
makeMyBarplot(274, 10)
makeMyBarplot(27, 30)
1 + 1
#| echo: false
2 * 2
```{r}
1==2
1+2
2^6
set.seed(1234)
df <- data.frame(
sex=factor(rep(c("F", "M"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5),
rnorm(200, mean=65, sd=5)))
)
head(df)
library(ggplot2)
df <- data.frame(
sex=factor(rep(c("F", "M"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5),
rnorm(200, mean=65, sd=5)))
)
head(df)
library(ggplot2)
# Change density plot fill colors by groups
ggplot(df, aes(x=weight, fill=sex)) +
geom_density()
# Change density plot fill colors by groups
ggplot(df, aes(x=weight, fill=sex)) +
geom_density()
# Use semi-transparent fill
p<-ggplot(df, aes(x=weight, fill=sex)) +
geom_density(alpha=0.4)
# Use semi-transparent fill
p<-ggplot(df, aes(x=weight, fill=sex)) +
geom_density(alpha=0.4)
p
# Change density plot fill colors by groups
ggplot(df, aes(x=weight, fill=sex)) +
geom_density()
# Use semi-transparent fill
p<-ggplot(df, aes(x=weight, fill=sex)) +
geom_density(alpha=0.4)
p
library(plyr)
library(SoundShape)
# Sample data from SoundShape
data(cuvieri)
# Select acoustic unit from sample
cuvieri.cut <- seewave::cutw(cuvieri, f=44100, from = 0.05, to=0.45, output="Wave")
# 3D spectrogram
par(mfrow=c(1,2), mar=c(0,2,1,0))
threeDspectro(cuvieri.cut, flim=c(0, 2.5),
colkey=list(plot=FALSE), cex.axis=0.4, cex.lab=0.8, resfac=3)
threeDspectro(cuvieri.cut, flim=c(0, 2.5),
colkey=list(plot=FALSE), cex.axis=0.4, cex.lab=0.8, resfac=3)
# Semilandmarks from sampled surface
threeDspectro(cuvieri.cut, flim=c(0, 2.5), plot.type="points",
samp.grid=TRUE, x.length=70, y.length=50, main="Semilandmarks 3D",
colkey=list(plot=FALSE), cex.axis=0.4, cex.lab=0.8)
install.packages("swirl")
library(swirl)
swirl()
install.packages("papaja")
??papaja
affiliation:
- id            : "1"
a = 5
a = 5
print(a)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
list.of.packages <- c("tidyverse", "ggpubr", "ez", "corrplot", "car", "stats","PerformanceAnalytics", "afex", "emmeans", "mlma", "ggplot2", "ggExtra", "psych", "ggpubr", "here", "gridExtra", "ggridges")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
read.csv("assignment_dataVis_dataset.csv ")
read.csv("assignment_dataVis_dataset.csv")
Vis = "assignment_dataVis_dataset.csv"
# condition 1
mean(Vis$condition_1)
library(tidyverse)
library(ggpubr)
library(ez)
library(corrplot)
library(car)
library(stats)
library(PerformanceAnalytics)
library(afex)
library(emmeans)
library(mlma)
library(ggplot2)
library(ggExtra)
library(psych)
library(gridExtra)
library(ggridges)
# condition 1
mean(Vis)
# condition 1
Mean1 = mean(Vis)
# condition 1
Mean1 = mean(Vis)
# condition 1
Mean1 = mean(condition_1$x)
# condition 1
Mean1 = mean(Vis$x[1:142])
split_df <- split(Vis, Vis$condition)
# split by conditions
split_df <- split(Vis, Vis$condition)
# split by conditions
split_df <- split(Vis, Vis$condition)
class(Vis)
View(Vis)
Vis =read.csv("assignment_dataVis_dataset.csv")
# split by conditions
split_df <- split(Vis, Vis$condition)
df_1 <- split_df$condition_1
df_2 <- split_df$condition_2
df_3 <- split_df$condition_3
df_4 <- split_df$condition_4
split_df <- split(Vis, Vis$condition)
condition_1 <- split_df$condition_1
condition_2 <- split_df$condition_2
condition_3 <- split_df$condition_3
condition_4 <- split_df$condition_4
mean(condition_1$x)
sd(condition_1$x)
mean(condition_1$y)
sd(condition_1$y)
mean(condition_2$x)
sd(condition_2$x)
mean(condition_2$y)
sd(condition_2$y)
mean(condition_3$x)
sd(condition_3$x)
mean(condition_3$y)
sd(condition_3$y)
mean(condition_4$x)
sd(condition_4$x)
mean(condition_4$y)
sd(condition_4$y)
VIew(Vis)
View(Vis)
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "red", size = 2) +
geom_smooth(method = "lm", color = "blue", se = FALSE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "red", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "lightgray", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "lightgray", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
formula = y ~ x,
parse = TRUE,
label.x.npc = "right", label.y.npc = 85) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_2, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_2, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
xlim(0,120) +
ylim(0,100) +
theme_classic()
ggplot(data = condition_3, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_2, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 2",
x = "X Lable",
y = "Y Lable") +
xlim(0,120) +
ylim(0,100) +
theme_classic()
ggplot(data = condition_3, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 3",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 4",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_4, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 4",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_4, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 4",
x = "X Lable",
y = "Y Lable") +
xlim(5,90) +
ylim(10,100) +
theme_classic()
ggplot(data = condition_4, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 4",
x = "X Lable",
y = "Y Lable") +
xlim(10,90) +
ylim(10,100) +
theme_classic()
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
getwd()
Vis = read.csv("assignment_dataVis_dataset.csv")
getwd()
setwd("D:/PNB 3EE3/dataVisualization")
setwd("D:/PNB 3EE3/dataVisualization")
Vis =read.csv("assignment_dataVis_dataset.csv")
Vis =read.csv("assignment_dataVis_dataset.csv")
split_df <- split(Vis, Vis$condition)
condition_1 <- split_df$condition_1
condition_2 <- split_df$condition_2
condition_3 <- split_df$condition_3
condition_4 <- split_df$condition_4
library(ggplot2)
mean(condition_1$x)
sd(condition_1$x)
mean(condition_1$y)
sd(condition_1$y)
split_df <- split(Vis, Vis$condition)
condition_1 <- split_df$condition_1
condition_2 <- split_df$condition_2
condition_3 <- split_df$condition_3
condition_4 <- split_df$condition_4
library(ggplot2)
mean(condition_1$x)
sd(condition_1$x)
mean(condition_1$y)
sd(condition_1$y)
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
formula = y ~ x,
parse = TRUE,
label.x.npc = "right", label.y.npc = 85) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
ggplot(data = condition_1, aes(x, y)) +
geom_point(color = "black", size = 2) +
geom_smooth(method = "lm", color = "lightgreen", fill = "#bef3cb", se = TRUE) +
labs(title = "Condition 1",
x = "X Lable",
y = "Y Lable") +
theme_classic()
mean(condition_2$x)
sd(condition_2$x)
mean(condition_2$y)
sd(condition_2$y)
